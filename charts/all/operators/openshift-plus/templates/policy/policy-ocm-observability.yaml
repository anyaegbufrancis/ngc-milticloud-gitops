apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  annotations:
    policy.open-cluster-management.io/categories: CA Assessment Authorization and
      Monitoring
    policy.open-cluster-management.io/controls: CA-7 Continuous Monitoring
    policy.open-cluster-management.io/standards: NIST SP 800-53
  labels:
    open-cluster-management.io/policy-set: openshift-plus
  name: policy-ocm-observability
  namespace: policies
spec:
  dependencies:
  - apiVersion: policy.open-cluster-management.io/v1
    compliance: Compliant
    kind: Policy
    name: policy-odf-status
    namespace: policies
  disabled: false
  policy-templates:
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-ocm-observability
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: console.openshift.io/v1
            kind: ConsoleLink
            metadata:
              name: observability
            spec:
              applicationMenu:
                imageURL: https://upload.wikimedia.org/wikipedia/commons/3/3a/OpenShift-LogoType.svg
                section: Red Hat applications
              href: https://{{ (lookup "route.openshift.io/v1" "Route" "open-cluster-management-observability"
                "grafana").spec.host }}
              location: ApplicationMenu
              text: Red Hat Advanced Cluster Management Observability
        remediationAction: enforce
        severity: medium
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-ocm-observability2
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: observability.open-cluster-management.io/v1beta2
            kind: MultiClusterObservability
            metadata:
              name: observability
            spec:
              observabilityAddonSpec: {}
              storageConfig:
                metricObjectStorage:
                  key: thanos.yaml
                  name: thanos-object-storage
        remediationAction: enforce
        severity: medium
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: policy-ocm-observability3
      spec:
        object-templates:
        - complianceType: musthave
          objectDefinition:
            apiVersion: v1
            data:
              .dockerconfigjson: '{{- if eq (lookup "v1" "Secret" "open-cluster-management"
                "multiclusterhub-operator-pull-secret").kind "Secret" -}} {{- fromSecret
                "open-cluster-management" "multiclusterhub-operator-pull-secret" ".dockerconfigjson"
                -}} {{- else -}} {{- fromSecret "openshift-config" "pull-secret" ".dockerconfigjson"
                -}} {{- end -}}'
            kind: Secret
            metadata:
              name: multiclusterhub-operator-pull-secret
              namespace: open-cluster-management-observability
            type: kubernetes.io/dockerconfigjson
        remediationAction: enforce
        severity: medium
  - objectDefinition:
      apiVersion: policy.open-cluster-management.io/v1
      kind: ConfigurationPolicy
      metadata:
        name: thanos-secret
      spec:
        object-templates-raw: "{{- /* read the bucket data and noobaa endpoint access
          data */ -}}\n{{- $objBucket := (lookup \"objectbucket.io/v1alpha1\" \"ObjectBucket\"
          \"\" \"obc-openshift-storage-obc-observability\") }}\n{{- $awsAccess :=
          (lookup \"v1\" \"Secret\" \"openshift-storage\" \"noobaa-admin\") }}\n{{-
          /* create the thanos config file as a template */ -}}\n{{- $thanosConfig
          := `\ntype: s3\nconfig:\n  bucket: %[1]s\n  endpoint: %[2]s\n  insecure:
          true\n  access_key: %[3]s\n  secret_key: %[4]s`\n}}\n\n{{- /* create the
          secret using the thanos configuration template created above. */ -}}\n-
          complianceType: mustonlyhave\n  objectDefinition:\n    apiVersion: v1\n
          \   kind: Secret\n    metadata:\n      name: thanos-object-storage\n      namespace:
          open-cluster-management-observability\n    type: Opaque\n    data:\n      thanos.yaml:
          {{ (printf $thanosConfig $objBucket.spec.endpoint.bucketName \n                                            $objBucket.spec.endpoint.bucketHost
          \n                                            ($awsAccess.data.AWS_ACCESS_KEY_ID
          | base64dec) \n                                            ($awsAccess.data.AWS_SECRET_ACCESS_KEY
          | base64dec)\n                      ) | base64enc }}\n"
        remediationAction: enforce
        severity: high
  remediationAction: enforce