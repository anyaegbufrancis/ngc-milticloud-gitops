# apiVersion: k8s.keycloak.org/v2alpha1
# kind: Keycloak
# metadata:
#   name: rhbk-sso-prod
#   namespace: rhbk-sso
# spec:
#   instances: 1
#   ingress:
#       enabled: false
#   db:
#     vendor: postgres
#     host: postgres-db.postgresql.svc.cluster.local
#     usernameSecret:
#       name: postgres-db-secret
#       key: username
#     passwordSecret:
#       name: postgres-db-secret
#       key: password
#   http:
#     # tlsSecret: keycloak-tls-cert  ## Must not be wildcard cert of openshift ingress. 
#     tlsSecret: keycloak-cert
#   hostname:
#     hostname: keycloak.apps.dd-aro.eastus.aroapp.io

# CERTSECRET=keycloak-cert
# for i in $(oc get secret  -n openshift-ingress | grep ingress | awk '{print $1}'); oc extract secret/$i -n openshift-ingress
# oc create secret tls $CERTSECRET --cert tls.crt --key tls.key -n rhbk-sso
# rm -rf tls.*
---
apiVersion: k8s.keycloak.org/v2alpha1
kind: Keycloak
metadata:
  name: rhbk-sso-dev
  namespace: rhbk-keycloak
spec:
  instance: 3
  db:
    vendor: postgres
    host: postgres-db.postgresql.svc.cluster.local
    usernameSecret:
      name: postgres-db-secret
      key: username
    passwordSecret:
      name: postgres-db-secret
      key: password
  http:
    httpEnabled: true
    # httpPort: 8180
  # hostname:
  #   hostname: keycloak.apps.dd-aro.eastus.aroapp.io
  #   strict: false    
  #   strictBackchannel: false
    # proxy: edge
  # serverConfiguration:
  #   - name: hostname-strict-https
  #     value: "false"
  #   - name: proxy
  #     value: edge
  # tlsSecret: INSECURE-DISABLE