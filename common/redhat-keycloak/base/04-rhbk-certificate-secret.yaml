apiVersion: v1
data:
  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2UUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktjd2dnU2pBZ0VBQW9JQkFRQ3NzWlU3aFBWems0VjQKWjFHdUY0NEI2a1dGZ1BZL2tudVdXdkUrSDJKOE1rZjkycmd0RkoybkdpVHBBUEk5UndiWk1tU3dUbXNUd1lDQgpJeTJXK0xzR0pNN1hOcGdvd0JNWTZyZHFoZGdmMHNjMXF5N3EwMzFBTVk5UU9VRVVLL1pGTlcxbTkrYmtHZUZpCjNXS3UzMWRuTnRnOE1rNmxLME5GTm0yWmFvSjZrSTBFUk54dlprK0tKVnAxbzRRaUZXQmhscFl2c0VVd3VmQzYKMkRweEZ2RGV4QjRpdTBvaGtSMjIvSzZING5waEUvVE5PQVJaUitFNVlGMk5kZjl6YmR3M1Z0YWJZa1R1YXhxWApEalVkbTIxNzFwOGJCUGwrMDQwdzNLekVqekhqbEdNVDhQVmVBTFFYcXlDL2h6aW5yMndScndYdFVzWWxmdit5ClNqN1dlZ0Q5QWdNQkFBRUNnZ0VBY2ZLZkFHM2pzMFkwdkZTWUhhSW5MblpSTnh6MzNzeWR4WUR1UzBwVUpwVGEKMGRLKzBlZ1hla29TN3JlVUh3QzlzUlRDUVY4TTRqVTh3SGpndlF3VUE2TEg1Rk4rcE96UDdSSDZ3a3ZjWm1zaQp6UFBOK2w1Zjk3cDcwTGhtaTVQU1pLb3pMTTBJU1p3V0RyRDdTMTNOQXlxNkZVWXdoR1YrZHEzS05YK0U1cTlpCmVmSXE2dkI4ZVFOVk5vQ2ZFMk9oTGU2TUIwSFNBMnFVY1RWWWl2RmJOckRBSVozNkdndDQ5OThSQVpsQ1YzZVgKdEllS3psZUNwbUVydEpQQlhydjVBUG5zRWpuZFdqY2FWZTRVK3IvNkFTcjI0dlJIRXQ1K0loN21SOGQ1WmFmWApVMjIyZUo4ZTN2TlMzU21VWWl0TnlrMXEwY1doaVo5Q21Lb3ljTTUxdFFLQmdRRGdpTzVyeWoyOThybnFPaHYrClVXMVdUL1pCMVZLYkxkZ1N4dGZrYzNUa1QxUFNlVGU1L2hoREZ0d1NRNUVONGppVFFMUlNiZDdMZUpPaVo4eWYKYVY0Nmo4Y0FBR1dpZFl1YjZ5RnBkZDdycUs5akU3L0xKSy9jV3pGcjZHRCtXMkg5R0dHSWNMejJDWEwyM05UNQpQdlg4SXZTYTJBUVJqbFhEOXduaFBkNytHd0tCZ1FERTVPQk9ldUdSTzdzNkx3RHFYZVJ6TFB3QVgyQUgwQkt6Cnd5YUVBdW9Oc2xscjdocFArNmdONmlVMkJKM3ZScy80M1QwUkorVENyQW9MV09pYmVyMnVseEd3SXR1Z2hpU2UKcWNxU2hhQVpMTy9KZ1g2SXdBbWY5WHVuWnlNUENraEMyNFZUbGt1N1JkQXlkSEhqUld0TWlIYmRNOTB1V0tjUwovWDl4WkljT3h3S0JnUUNpaUh5TjZrZm5SOXpzZ0VQalJHNHhISkRWOXVWbER6cHAzU1pLYUlrays0ZGh3LzFpCjFWd2F0R0Y1bHc5WlRYaEduMy9vYXovcmFjejBzczZjVmxtdmFvUlNxL2JtTXRCc2ZUZ2lid0IrOWd4L1c3eHEKQUpTTW5qYVlOZzZBRVFaTmYyaWFxNEVkV0ptdnVRc3hvVEhPNGo3T0Y3QmFSUDR3YkpMcVNTOHlJUUtCZ0Z3Mgo3YThUOGkwNUVua3Zwbmdkdlc4TDlJS2dLTFBBQ2VKVFZlaWlETWlaYlRRVmNoRmZ4ZGV1Zi9zS3NvVnNYdDhwCmp2NUg5dVlOK1M1VFY2M3FFSWlDakhBNEF6RHRZcDFFM0hFL1VEbzZSNXZTb0ZhZnltSTJjTkY0aG56MnpkMHkKUHdGazlOY2kzVjJrRityZmlsOXYwbXZMYkozV08zbXpiRXJKVUUvbEFvR0FUUnE1c3VaUVd5SkR6MWhMeWo0MwpvUlA5R050QU0wNjVFdEZpN2EyTTV1Y29TdmZCRmFyUkNTVkljRkRFb2tSb3NscVlUTjg2UUNrT3ZqSFhyRFNGClFMU1V5RmlsMnk2aGwwaWViaStQQkNUL3ZGVHZ5OVdUT2J1R0FFVEdhVEFvaytLNjM4VjVoY2R4YSsrMGtnUkUKdUpsdUM0UlQ1cWhFekl4R1V1VXZQQnc9Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
  tls.crt: 
kind: Secret
metadata:
  name: keycloak-tls-cert
  namespace: rhbk-sso