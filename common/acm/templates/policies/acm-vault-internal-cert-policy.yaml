# This pushes out the HUB's Certificate Authorities on to the imported clusters
{{ if .Values.clusterGroup.isHubCluster }}
---
apiVersion: policy.open-cluster-management.io/v1
kind: Policy
metadata:
  name: acm-keycloak-ingress-cert
  namespace: openshift-ingress
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
    argocd.argoproj.io/compare-options: IgnoreExtraneous
spec:
  remediationAction: enforce
  disabled: false
  policy-templates:
    - objectDefinition:
        apiVersion: policy.open-cluster-management.io/v1
        kind: ConfigurationPolicy
        metadata:
          name: acm-keycloak-ingress-cert
        spec:
          remediationAction: musthave
          severity: medium
          namespaceSelector:
            include:
              - openshift-ingress
          object-templates:
            - complianceType: musthave
              objectDefinition:
                kind: Secret
                apiVersion: v1
                type: Opaque
                metadata:
                  name: keycloak-cert
                  namespace: rhbk-sso
                data:
                  tls-crt: '{{ `{{hub fromSecret "" "d9fc9fbf-6831-499e-8cad-dd5ce46ee63b-ingress" "tls.crt" hub}}` }}'
                  tls-crt: '{{ `{{hub fromSecret "" "d9fc9fbf-6831-499e-8cad-dd5ce46ee63b-ingress" "tls.key" hub}}` }}'
--- 
apiVersion: policy.open-cluster-management.io/v1
kind: PlacementBinding
metadata:
  name: acm-keycloak-ingress-policy-placement-binding
  namespace: openshift-ingress
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
placementRef:
  name: acm-keycloak-ingress-policy-placement
  kind: PlacementRule
  apiGroup: apps.open-cluster-management.io
subjects:
  - name: acm-keycloak-ingress-cert
    kind: Policy
    apiGroup: policy.open-cluster-management.io
---
apiVersion: apps.open-cluster-management.io/v1
kind: PlacementRule
metadata:
  name: acm-keycloak-ingress-policy-placement
  namespace: openshift-ingress
  annotations:
    argocd.argoproj.io/sync-options: SkipDryRunOnMissingResource=true
spec:
  clusterConditions:
    - status: 'True'
      type: ManagedClusterConditionAvailable
  clusterSelector:
    matchExpressions:
      - key: local-cluster
        operator: In
        values:
          - 'true'
{{ end }}

